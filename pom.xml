<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.allset.java</groupId>
	<artifactId>allset-java</artifactId>
	<version>0.0.1-SNAPSHOT</version> <!-- <version>1.0.0</version> -->
	<packaging>pom</packaging>

	<name>Allset Java</name>

	<description>
		A Maven pom with commons configurations to be used on projects.
    </description>

	<inceptionYear>2015</inceptionYear>

	<contributors>
		<contributor>
			<name>Fernando Romulo da Silva</name>
		</contributor>
	</contributors>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>fernando-silva</id>
			<name>Fernando Romulo da Silva</name>
			<email>fernando.romulo.silva@gmail.com</email>
			<url>https://fernando-romulo-silva.github.io/personal-page/</url>
			<organization>Nandao Software</organization>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>Portugal/Lisbon</timezone>
			<properties>
				<picUrl>https://avatars.githubusercontent.com/u/6677305?v=4</picUrl>
			</properties>
		</developer>
	</developers>

	<prerequisites>
		<maven>3.8.8</maven>
	</prerequisites>

	<issueManagement>
		<system>GITHUB</system>
		<url>https://${scm.platform}/${scm.account}/${project.artifactId}/blob/master/docs/STATUS.md</url>
	</issueManagement>

	<url>https://${scm.platform}/${scm.account}/${project.artifactId}</url>

	<distributionManagement>
		<!--
		<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/${scm.account}/${project.artifactId}</url>
		</repository>
		-->
		<repository>
			<id>dev.release</id>
			<url>file:${project.build.directory}/release/</url>
		</repository>
	</distributionManagement>

	<!-- 
	<ciManagement>
		<system>Jenkins</system>
		<url>https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven-pmd-plugin/</url>
	</ciManagement>	
    -->

	<scm child.scm.connection.inherit.append.path="false" child.scm.developerConnection.inherit.append.path="false" child.scm.url.inherit.append.path="false">
		<url>${scm.url}</url>
		<connection>${scm.conn}</connection>
		<developerConnection>${scm.devConn}</developerConnection>
		<tag>${scm.tag}</tag>
	</scm>

	<modules>
		<module>allset-java-jee-full</module>
		<module>allset-java-jee-webprofile</module>
		<module>allset-java-jee-microprofile</module>
		<module>allset-java-jee-coreprofile</module>
		<module>allset-java-se</module>
		<module>allset-java-web</module>
		<!-- <module>allset-java-android</module> Problems with android's plugin -->
	</modules>

	<properties>
		<!--|###########################################################################################################################| -->
		<!--|#################################### PROJECT CONFIGURATION ################################################################| -->
		<!--|###########################################################################################################################| -->

		<!-- https://github.com/basepom/duplicate-finder-maven-plugin/wiki -->

		<!-- Project Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- JVM Arguments -->

		<!-- Enable preview features for jdk: -->
		<!-- -\-enable-preview -->

		<!-- Explicit heap memory: -->
		<!-- Xmx : Specifies the maximum memory allocation pool for a JVM -->
		<!-- Xms : Specifies the initial memory allocation pool for a JVM -->
		<!-- Example: -Xms2G -Xmx5G -->

		<!-- GC implementations: -->
		<!-- Serial Garbage Collector: -XX:+UseSerialGC -->
		<!-- Parallel Garbage Collector: -XX:+UseParallelGC -->
		<!-- CMS Garbage Collector: -XX:+USeParNewGC -->
		<!-- G1 Garbage Collector: -XX:+UseG1GC -->

		<!-- 
		<project.argLine> -Xms2G -Xmx5G	</project.argLine>
		 -->

		<!--|###########################################################################################################################| -->
		<!--|#################################### PLUGINS VERSIONS #####################################################################| -->
		<!--|###########################################################################################################################| -->
		<!-- basic -->
		<maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
		<maven.javadoc.plugin.version>3.10.0</maven.javadoc.plugin.version>
		<maven.jar.plugin.version>3.4.2</maven.jar.plugin.version>
		<maven.release.plugin.version>3.1.1</maven.release.plugin.version>
		<maven.source.plugin.version>3.3.1</maven.source.plugin.version>
		<maven.resources.plugin.version>3.3.1</maven.resources.plugin.version>
		<maven.dependency.plugin.version>3.8.0</maven.dependency.plugin.version>

		<!-- tests -->
		<maven.failsafe.plugin.version>3.5.0</maven.failsafe.plugin.version>
		<maven.surefire.plugin.version>3.5.0</maven.surefire.plugin.version>
		<jacoco.maven.plugin.version>0.8.12</jacoco.maven.plugin.version>

		<!-- scm -->
		<maven.scm.plugin.version>2.1.0</maven.scm.plugin.version>
		<maven.scm.publish.plugin.version>3.3.0</maven.scm.publish.plugin.version>

		<!-- reports -->
		<maven.site.plugin.version>3.20.0</maven.site.plugin.version>
		<maven.project.info.reports.plugin.version>3.7.0</maven.project.info.reports.plugin.version>
		<maven.jxr.plugin.site.version>3.5.0</maven.jxr.plugin.site.version>
		<taglist.maven.plugin.version>3.1.0</taglist.maven.plugin.version>
		<jdepend.maven.plugin.version>2.0</jdepend.maven.plugin.version>

		<!-- tools -->
		<pmd.maven.plugin.version>3.25.0</pmd.maven.plugin.version>
		<spotbugs.maven.plugin.version>4.8.6.3</spotbugs.maven.plugin.version>
		<checkstyle.maven.plugin.version>3.5.0</checkstyle.maven.plugin.version>

		<!--|###########################################################################################################################| -->
		<!--|#################################### CONF. PLUGINS ########################################################################| -->
		<!--|###########################################################################################################################| -->
		<!--|####### OBS: Some properties plugin have the equal names, so you must be careful ##########################################| -->

		<!--|##############################################################| -->
		<!--|################# Locales ####################################| -->
		<!--|##############################################################| -->
		<!-- Languages for site, reports, etc. Ex: en, pt_BR, fr -->
		<locales>en</locales>

		<!-- Properties' plugins that can rewrite on child POMs. -->
		<!--|##############################################################| -->
		<!--|################# Compiler ###################################| -->
		<!--|##############################################################| -->
		<!-- JVM Version, usually LTS -->
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<!-- compile in the new java process -->
		<maven.compiler.fork>true</maven.compiler.fork>

		<!-- compile only changed classes, false; true compile all classes -->
		<maven.compiler.useIncrementalCompilation>false</maven.compiler.useIncrementalCompilation>

		<!--|##############################################################| -->
		<!--|################# Spotbugs ###################################| -->
		<!--|##############################################################| -->
		<!-- Version -->
		<spotbugs.version>4.8.6</spotbugs.version>

		<!-- Enables analysis which takes more memory but finds more bugs. -->
		<!-- If you run out of memory, changes the value of the effort element to 'low'. -->
		<spotbugs.effort>Max</spotbugs.effort>

		<!-- Reports all bugs (other values are medium and max) -->
		<spotbugs.threshold>Low</spotbugs.threshold>

		<!-- Produces XML report -->
		<spotbugs.xmlOutput>true</spotbugs.xmlOutput>

		<!-- Check tests classes -->
		<spotbugs.includeTests>true</spotbugs.includeTests>

		<!-- Suggest exclude Bugs File (only on child pom) -->
		<!-- <excludeBugsFile>default-extensions/spotbugs/spotbugs-excludes.xml</excludeBugsFile>  -->

		<!-- Suggest exclude Bugs File Filter (only on child pom) -->
		<!-- <spotbugs.excludeFilterFile>default-extensions/spotbugs-exclude-filter.xml</spotbugs.excludeFilterFile> -->

		<!-- Plugins https://spotbugs.readthedocs.io/en/stable/links.html#spotbugs-plugins -->

		<!--|##############################################################| -->
		<!--|################# CheckStyle #################################| -->
		<!--|##############################################################| -->
		<!-- Checkstyle's version -->
		<checkstyle.version>10.18.1</checkstyle.version>

		<!-- Suggest checkstyle checks file (only on child pom) -->
		<!-- <checkstyle.config.location>default-extensions/checkstyle/checkstyle-checks.xml</checkstyle.config.location> -->

		<!-- Suggest checkstyle suppressions file (only on child pom) -->
		<!-- <checkstyle.suppressions.location>default-extensions/checkstyle/checkstyle-suppressions.xml</checkstyle.suppressions.location> -->

		<!--|##############################################################| -->
		<!--|################# Jacoco #####################################| -->
		<!--|##############################################################| -->
		<!-- fail if not catch the minimum -->
		<jacoco.haltOnFailure>true</jacoco.haltOnFailure>

		<!-- Minimum class coverage -->
		<jacoco.classLineRate>0.50</jacoco.classLineRate>
		<jacoco.classBranchRate>0.50</jacoco.classBranchRate>

		<!-- Minimum package coverage -->
		<jacoco.packageLineRate>0.50</jacoco.packageLineRate>
		<jacoco.packageBranchRate>0.50</jacoco.packageBranchRate>

		<!-- Minimum total coverage -->
		<jacoco.totalLineRate>0.50</jacoco.totalLineRate>
		<jacoco.totalBranchRate>0.50</jacoco.totalBranchRate>

		<!--|##############################################################| -->
		<!--|################# Surefire ###################################| -->
		<!--|##############################################################| -->
		<!-- The surefire groups -->
		<surefire.groups>unit,integration,functional,acceptance,perform</surefire.groups>
		<surefire.excludedGroups></surefire.excludedGroups>

		<!-- Tests run in parallel (run in thread) by methods, classes or test suite -->
		<surefire.parallel>methods</surefire.parallel>

		<!-- How many tests (threads) will be run synchronously in a JVM process ? -->
		<surefire.threadCount>8</surefire.threadCount>

		<!-- Maximum threads per CPU core -->
		<surefire.perCoreThreadCount>true</surefire.perCoreThreadCount>

		<!-- Sets the maximum JVM processes (if you put the letter 'C' it will be the maximum number of process per CORE) synchronously -->
		<surefire.forkCount>1C</surefire.forkCount>

		<!-- reuse process JVM -->
		<surefire.reuseForks>true</surefire.reuseForks>

		<!--|##############################################################| -->
		<!--|################# Failsafe ###################################| -->
		<!--|##############################################################| -->
		<!-- The failsafe groups -->
		<failsafe.groups>integration,functional,system</failsafe.groups>
		<failsafe.excludedGroups>unit</failsafe.excludedGroups>
		<!-- Tests run in parallel (run in thread) by methods, classes or test suite -->
		<failsafe.parallel>methods</failsafe.parallel>

		<!--|##############################################################| -->
		<!--|################# Java Doc ###################################| -->
		<!--|##############################################################| -->
		<!-- check javadoc errors. The Checkstyle already do it -->
		<maven.javadoc.failOnError>false</maven.javadoc.failOnError>

		<!--|##############################################################| -->
		<!--|################# PMD & CPD ##################################| -->
		<!--|##############################################################| -->
		<!-- CPD minimum tokens to report on (5 to 10 duplicate lines) -->
		<minimumTokens>100</minimumTokens>

		<!-- The rule priority threshold; rules with lower priority than this will not be evaluated. -->
		<minimumPriority>5</minimumPriority>

		<!-- include test class -->
		<pmd.includeTests>true</pmd.includeTests>

		<!-- pmd version -->
		<pmd.version>7.5.0</pmd.version>

		<!-- failOnViolation is actually true by default, but can be disabled -->
		<pmd.failOnViolation>true</pmd.failOnViolation>

		<!-- Suggest ruleset checks file (only on child pom) -->
		<!-- configuration.rulesets -->
		<!-- <ruleset>default-extensions/pmd/java/pmd-ruleset.xml</ruleset> -->
		<!-- or -->
		<!-- <ruleset>rulesets/java/quickstart.xml</ruleset> from pmd.jar -->

		<!--|##############################################################| -->
		<!--|################# SCM ########################################| -->
		<!--|##############################################################| -->
		<scm.platform>github.com</scm.platform>
		<scm.account>fernando-romulo-silva</scm.account>
		<scm.base>github.com/${scm.account}/${project.artifactId}</scm.base>
		<scm.conn>scm:git:ssh://git@${scm.base}.git</scm.conn>
		<scm.devConn>scm:git:ssh://git@${scm.base}.git</scm.devConn>
		<scm.url>https://${scm.base}</scm.url>
		<scm.tag>HEAD</scm.tag>

		<scmpublish.scm.branch>gh-pages</scmpublish.scm.branch>

		<!--|##############################################################| -->
		<!--|################# Info Reports ###############################| -->
		<!--|##############################################################| -->
		<dependency.locations.enabled>false</dependency.locations.enabled>

		<!--|##############################################################| -->
		<!--|################# Tag List ###################################| -->
		<!--|##############################################################| -->
		<taglist.skip>false</taglist.skip>

		<!--|##############################################################| -->
		<!--|################# JDepend ####################################| -->
		<!--|##############################################################| -->


		<!--|###########################################################################################################################| -->
		<!--|#################################### TIPS #################################################################################| -->
		<!--|###########################################################################################################################| -->
		<!-- If you want skip some plugin, just put it on configuration's plugin -->
		<!-- <skip>false</skip> -->

		<!-- If you force to child execute some plugin, just put it on configuration's plugin -->
		<!-- <forceMojoExecution>true</forceMojoExecution> -->

		<!-- Depedency erros can fixed with: -->
		<!-- mvn dependency:list -X -->
		<!-- mvn dependency:tree | grep -B 10 -A 1 tools.jar -->
		<!-- mvn install:install-file -DgroupId=com.sun -DartifactId=tools -Dpackaging=jar -Dversion=1.8 -Dfile="$JAVA_HOME/lib/tools.jar" -->

	</properties>

	<!-- Work around to download dependencies inside maven plugins -->
	<!--
	<dependencies>
		
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs</artifactId>
			<version>${spotbugs.version}</version>
			<scope>test</scope>
		</dependency>		
		
		<dependency>
			<groupId>com.puppycrawl.tools</groupId>
			<artifactId>checkstyle</artifactId>
			<version>${checkstyle.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.pmd</groupId>
			<artifactId>pmd-core</artifactId>
			<version>${pmd.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>net.sourceforge.pmd</groupId>
			<artifactId>pmd-java</artifactId>
			<version>${pmd.version}</version>
			<scope>test</scope>
		</dependency>
				
	</dependencies>
	-->

	<!-- |######################## BUILD ###############################################################################################| -->
	<build>

		<!--
		<plugins>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.4.1</version>
				<executions>
					<execution>
						<id>enforce-maven-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.9.6</version>
								</requireMavenVersion>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>		

-->

		<pluginManagement>

			<plugins>
				<!-- mvn install:install-file -DgroupId=com.sun -DartifactId=tools -Dpackaging=jar -Dversion=1.8 -Dfile="$JAVA_HOME/lib/tools.jar" -->
				<!-- Dependencies : download the dependencies -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
					<configuration>
						<excludeReactor>false</excludeReactor>
					</configuration>
					<!--
					<dependencies>
						<dependency>
							<groupId>com.sun</groupId>
							<artifactId>tools</artifactId>
							<version>1.8</version>
						</dependency>
					</dependencies>
					-->
				</plugin>


				<!-- Compiler : compile the files -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
				</plugin>

				<!-- PMD : Reports on issues found within application code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${pmd.maven.plugin.version}</version>
					<configuration>
						<includeTests>${pmd.includeTests}</includeTests>
						<failOnViolation>${pmd.failOnViolation}</failOnViolation>
						<printFailingErrors>true</printFailingErrors>
						<targetJdk>${maven.compiler.target}</targetJdk>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>net.sourceforge.pmd</groupId>
							<artifactId>pmd-core</artifactId>
							<version>${pmd.version}</version>
						</dependency>
						<dependency>
							<groupId>net.sourceforge.pmd</groupId>
							<artifactId>pmd-java</artifactId>
							<version>${pmd.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- Spotbugs : detects possible bugs in Java programs -->
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>${spotbugs.maven.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.github.spotbugs</groupId>
							<artifactId>spotbugs</artifactId>
							<version>${spotbugs.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- Resources : handles the copying of project resources to the output directory -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.plugin.version}</version>
					<configuration>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
							<nonFilteredFileExtension>swf</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven.project.info.reports.plugin.version}</version>
				</plugin>

				<!-- Release : release a project with Maven, saving a lot of repetitive, manual work -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.plugin.version}</version>
				</plugin>

				<!-- Site : generate a site for the project. -->
				<!-- The generated site also includes the project's reports that were configured in the POM -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
				</plugin>

				<!--scm : SCM for code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${maven.scm.plugin.version}</version>
				</plugin>

				<!--scm publish : publishing Maven website to any supported SCM -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-publish-plugin</artifactId>
					<version>${maven.scm.publish.plugin.version}</version>
					<configuration>
						<scmBranch>${scmpublish.scm.branch}</scmBranch>
					</configuration>
				</plugin>

				<!-- Checkstyle : development tool to help programmers write Java code that adheres to a coding standard -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${checkstyle.maven.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<excludes>**/module-info.java</excludes>
					</configuration>
				</plugin>

				<!-- Surefire : The Surefire Plugin is used during the test phase of the build lifecycle to execute the tests of an application. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<configuration>
						<parallel>${surefire.parallel}</parallel>
						<threadCount>${surefire.threadCount}</threadCount>
						<forkCount>${surefire.forkCount}</forkCount>
						<perCoreThreadCount>${surefire.perCoreThreadCount}</perCoreThreadCount>
						<reuseForks>${surefire.reuseForks}</reuseForks>
						<!-- don't put this conf, because -Dgroups=someGroup stop to work!
						<groups>${surefire.groups}</groups>
						-->
						<argLine>-Dnet.bytebuddy.experimental=true</argLine>
					</configuration>
				</plugin>

				<!-- Failsafe : The Failsafe Plugin is used during the test phase of the build lifecycle to execute the tests of an application. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven.failsafe.plugin.version}</version>
					<configuration>
						<useModulePath>false</useModulePath>
						<useSystemClassLoader>false</useSystemClassLoader>
						<skipTests>false</skipTests>
						<includes>
							<include>**/*.java</include>
						</includes>

						<!-- don't put this conf, because -Dgroups=someGroup stop to work!						
						<groups>${failsafe.groups}</groups>
						<excludedGroups>${failsafe.excludedGroups}</excludedGroups>
						-->
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Jacoco : JaCoCo is a free code coverage library for Java -->
				<!-- https://stackoverflow.com/questions/3166538/how-to-execute-maven-plugin-execution-directly-from-command-line -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.maven.plugin.version}</version>
					<executions>
						<execution>
							<id>jacoco-initialize</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<goals>
								<goal>report-aggregate</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<excludes>
							<exclude>**/*Exception.*</exclude>
							<exclude>**/*Messages.*</exclude>
							<exclude>**/*Const.*</exclude>
						</excludes>
						<rules>
							<rule>
								<element>CLASS</element>
								<limits>
									<limit>
										<counter>LINE</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.classLineRate}</minimum>
									</limit>
									<limit>
										<counter>BRANCH</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.classBranchRate}</minimum>
									</limit>
								</limits>
							</rule>

							<rule>
								<element>PACKAGE</element>
								<limits>
									<limit>
										<counter>LINE</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.packageLineRate}</minimum>
									</limit>
									<limit>
										<counter>BRANCH</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.packageBranchRate}</minimum>
									</limit>
								</limits>
							</rule>

							<rule>
								<element>BUNDLE</element>
								<limits>
									<limit>
										<counter>COMPLEXITY</counter>
										<value>COVEREDRATIO</value>
										<minimum>0.40</minimum>
									</limit>
									<limit>
										<counter>LINE</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.totalLineRate}</minimum>
									</limit>
									<limit>
										<counter>BRANCH</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.totalBranchRate}</minimum>
									</limit>
								</limits>
							</rule>

						</rules>
					</configuration>
				</plugin>

				<!-- Jar : provides the capability to build jars -->
				<!-- 
					mvn install:install-file 
					    -DgroupId=com.example 
					    -DartifactId=example 
					    -Dversion=1.2.3 
					    -Dclassifier=tests 
					    -Dpackaging=test-jar 
					    -Dfile=example-1.2.3-tests.jar				
				 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
				</plugin>

				<!-- Source : creates a jar archive of the source files of the current project. mvn source:jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.plugin.version}</version>
				</plugin>

				<!-- JavaDoc : uses the Javadoc tool to generate javadocs for the project. mvn javadoc:jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
					<configuration>
						<detectJavaApiLink>false</detectJavaApiLink>
						<detectLinks>false</detectLinks>
					</configuration>
				</plugin>

				<!-- duplicate finder: find and flag duplicate classes and resources on the java classpath. mvn duplicate-finder:check -->
				<plugin>
					<groupId>com.ning.maven.plugins</groupId>
					<artifactId>maven-duplicate-finder-plugin</artifactId>
				</plugin>

			</plugins>
		</pluginManagement>

	</build>

	<!-- |######################## REPORTING (SITE) ####################################################################################| -->
	<reporting>

		<plugins>

			<!-- Surefire : generates the test results report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<parallel>${surefire.parallel}</parallel>
					<threadCount>${surefire.threadCount}</threadCount>
					<forkCount>${surefire.forkCount}</forkCount>
					<perCoreThreadCount>${surefire.perCoreThreadCount}</perCoreThreadCount>
					<reuseForks>${surefire.reuseForks}</reuseForks>
					<argLine>-Dnet.bytebuddy.experimental=true</argLine>
				</configuration>
			</plugin>

			<!-- PMD : generates the pmd results report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.maven.plugin.version}</version>
				<configuration>
					<includeTests>${pmd.includeTests}</includeTests>
					<failOnViolation>${pmd.failOnViolation}</failOnViolation>
					<printFailingErrors>true</printFailingErrors>
					<targetJdk>${maven.compiler.target}</targetJdk>
				</configuration>
			</plugin>

			<!-- Spotbugs : generates the spotbugs results report -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.maven.plugin.version}</version>
			</plugin>

			<!-- Chekstyle : generates the checkstyle results report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.maven.plugin.version}</version>
				<configuration>
					<excludes>**/module-info.java</excludes>
				</configuration>
			</plugin>

			<!-- Jacoco : generates the jacoco results report -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<excludes>
						<exclude>**/*Exception.*</exclude>
						<exclude>**/*Messages.*</exclude>
						<exclude>**/*Const.*</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Jxr : generated reports make it easier for the user to reference or find specific lines of code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.plugin.site.version}</version>
			</plugin>

			<!-- JavaDoc : generates the javadoc results report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<detectJavaApiLink>false</detectJavaApiLink>
					<detectLinks>false</detectLinks>
				</configuration>
			</plugin>

			<!-- Taglist : generates a report on various tags found in the code (Ex: T0D0) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${taglist.maven.plugin.version}</version>
				<configuration>
					<skipTestSources>${taglist.skip}</skipTestSources>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Todo Work Annotation</displayName>
								<tags>
									<tag>
										<matchString>TODO</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>@todo</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>Version Annotation</displayName>
								<tags>
									<tag>
										<matchString>@deprecated</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>

			<!-- JDepend : produces a nicely formatted metrics report based on your project -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>${jdepend.maven.plugin.version}</version>
			</plugin>

			<!-- Dependency : show the dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>analyze-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>


</project>