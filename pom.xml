<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.allset.java</groupId>
	<artifactId>allset-java</artifactId>
	<version>0.0.1-SNAPSHOT</version> <!-- <version>1.0.0</version> -->
	<packaging>pom</packaging>

	<modules>
		<module>allset-java-ee-full</module>
		<module>allset-java-ee-webprofile</module>
		<module>allset-java-se</module>
		<module>allset-java-web</module>
		<!-- <module>allset-java-android</module> Problems with android's plugin -->
	</modules>

	<description>
	     Set of maven configurations for types of projects that I already worked on. 
	     On the main pom.xml, there are a lot of plugin configurations used on my projects.
	</description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<url>https://github.com/fernando-romulo-silva/allset-java</url>

	<scm>
		<url>https://github.com/fernando-romulo-silva/allset-java</url>
		<connection>scm:git:ssh://git@github.com:fernando-romulo-silva/allset-java.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:fernando-romulo-silva/allset-java.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<!--|###########################################################################################################################| -->
		<!--|#################################### PROJECT CONFIGURATION ################################################################| -->
		<!--|###########################################################################################################################| -->

		<!-- Project Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>

		<!-- JVM Arguments -->

		<!-- Enable preview features for jdk: -->
		<!-- -\-enable-preview -->

		<!-- Explicit heap memory: -->
		<!-- Xmx : Specifies the maximum memory allocation pool for a JVM -->
		<!-- Xms : Specifies the initial memory allocation pool for a JVM -->
		<!-- Example: -Xms2G -Xmx5G -->

		<!-- GC implementations: -->
		<!-- Serial Garbage Collector: -XX:+UseSerialGC -->
		<!-- Parallel Garbage Collector: -XX:+UseParallelGC -->
		<!-- CMS Garbage Collector: -XX:+USeParNewGC -->
		<!-- G1 Garbage Collector: -XX:+UseG1GC -->

		<project.argLine> -Xms2G -Xmx5G	</project.argLine>

		<!--|###########################################################################################################################| -->
		<!--|#################################### PLUGINS VERSION ######################################################################| -->
		<!--|###########################################################################################################################| -->
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.pmd.plugin.version>3.14.0</maven.pmd.plugin.version> <!-- 3.15.0-SNAPSHOT -->
		<spotbugs.maven.plugin.version>4.3.0</spotbugs.maven.plugin.version>
		<maven.checkstyle.plugin.version>3.1.2</maven.checkstyle.plugin.version>

		<maven.javadoc.plugin.version>3.3.0</maven.javadoc.plugin.version>
		<maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version> <!-- 3.0.0-M5 -->
		<maven.site.plugin.version> 3.9.1</maven.site.plugin.version>
		<maven.jar.plugin.version>3.2.0</maven.jar.plugin.version>
		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>

		<jacoco.maven.plugin.version>0.8.7</jacoco.maven.plugin.version> <!-- -->
		<maven.source.plugin.version>3.2.1</maven.source.plugin.version>
		<maven.resources.plugin.version>3.2.0</maven.resources.plugin.version>

		<jdepend.maven.plugin.version>2.0</jdepend.maven.plugin.version>
		<taglist.maven.plugin.version>2.4</taglist.maven.plugin.version>
		<maven.jxr.plugin.site.version>3.1.1</maven.jxr.plugin.site.version>
		<cobertura.maven.plugin.version>2.7</cobertura.maven.plugin.version>
		<maven.dependency.plugin.version>3.2.0</maven.dependency.plugin.version>

		<!--|###########################################################################################################################| -->
		<!--|#################################### CONF. PLUGINS ########################################################################| -->
		<!--|###########################################################################################################################| -->
		<!--|####### OBS: Some properties plugin have the equal names, so you must be careful ##########################################| -->

		<!--|##############################################################| -->
		<!--|################# Locales ####################################| -->
		<!--|##############################################################| -->
		<!-- Languages for site, reports, etc. Ex: en, pt_BR, fr -->
		<locales>en</locales>

		<!-- Properties' plugins that can rewrite on child POMs. -->
		<!--|##############################################################| -->
		<!--|################# Compiler ###################################| -->
		<!--|##############################################################| -->
		<!-- JVM Version -->
		<maven.compiler.source>16</maven.compiler.source>
		<maven.compiler.target>16</maven.compiler.target>

		<!-- compile in the new java process -->
		<maven.compiler.fork>true</maven.compiler.fork>

		<!-- compile only changed classes, false; true compile all classes -->
		<maven.compiler.useIncrementalCompilation>false</maven.compiler.useIncrementalCompilation>

		<!--|##############################################################| -->
		<!--|################# Spotbugs ###################################| -->
		<!--|##############################################################| -->
		<!-- Enables analysis which takes more memory but finds more bugs. -->
		<!-- If you run out of memory, changes the value of the effort element to 'low'. -->
		<spotbugs.effort>Max</spotbugs.effort>

		<!-- Reports all bugs (other values are medium and max) -->
		<spotbugs.threshold>Low</spotbugs.threshold>

		<!-- Produces XML report -->
		<spotbugs.xmlOutput>true</spotbugs.xmlOutput>

		<!-- Check tests classes -->
		<spotbugs.includeTests>true</spotbugs.includeTests>

		<!-- File with excluded rules : only on child pom -->
		<!-- <spotbugs.excludeFilterFile>src/main/resources/spotbugs-exclude.xml</spotbugs.excludeFilterFile> -->

		<!--|##############################################################| -->
		<!--|################# CheckStyle #################################| -->
		<!--|##############################################################| -->
		<!-- Checkstyle config location -->
		<checkstyle.config.location>checkstyle.xml</checkstyle.config.location>
		<!-- Checkstyle's version -->
		<checkstyle.version>9.0</checkstyle.version>

		<!--|##############################################################| -->
		<!--|################# Jacoco #####################################| -->
		<!--|##############################################################| -->
		<!-- fail if not catch the minimum -->
		<jacoco.haltOnFailure>true</jacoco.haltOnFailure>

		<!-- Minimum class coverage -->
		<jacoco.classLineRate>0.50</jacoco.classLineRate>
		<jacoco.classBranchRate>0.50</jacoco.classBranchRate>

		<!-- Minimum package coverage -->
		<jacoco.packageLineRate>0.50</jacoco.packageLineRate>
		<jacoco.packageBranchRate>0.50</jacoco.packageBranchRate>

		<!-- Minimum total coverage -->
		<jacoco.totalLineRate>0.50</jacoco.totalLineRate>
		<jacoco.totalBranchRate>0.50</jacoco.totalBranchRate>

		<!--|##############################################################| -->
		<!--|################# Cobertura ##################################| -->
		<!--|##############################################################| -->
		<!-- Minimum class coverage -->
		<cobertura.classLineRate>50</cobertura.classLineRate>
		<cobertura.classBranchRate>50</cobertura.classBranchRate>

		<!-- Minimum package coverage -->
		<cobertura.packageLineRate>50</cobertura.packageLineRate>
		<cobertura.packageBranchRate>50</cobertura.packageBranchRate>

		<!-- Minimum total coverage -->
		<cobertura.totalLineRate>50</cobertura.totalLineRate>
		<cobertura.totalBranchRate>50</cobertura.totalBranchRate>

		<!-- fail if not catch the minimum -->
		<cobertura.haltOnFailure>true</cobertura.haltOnFailure>

		<!-- ignore methods with 1 line -->
		<cobertura.ignoreTrivial>true</cobertura.ignoreTrivial>

		<!--|##############################################################| -->
		<!--|################# Surefire ###################################| -->
		<!--|##############################################################| -->
		<!-- The groups are separated by level -->
		<surefire.groups>unit, integration, functional, acceptance, perform, regression</surefire.groups>

		<!-- Os testes vao ser paralelos (rodar em thread) em relacao a metodos (methods), classes, (class) ou suite de testes (tests) -->
		<!-- Tests run in parallel (run in thread) by methods, classes or test suite -->
		<surefire.parallel>methods</surefire.parallel>

		<!-- How many tests (threads) will be run synchronously in a JVM process ? -->
		<surefire.threadCount>8</surefire.threadCount>

		<!-- Maximum threads per CPU core -->
		<surefire.perCoreThreadCount>true</surefire.perCoreThreadCount>

		<!-- Sets the maximum JVM processes (if you put the letter 'C' it will be the maximum number of process per CORE) synchronously -->
		<surefire.forkCount>1C</surefire.forkCount>

		<!-- reuse process JVM -->
		<surefire.reuseForks>true</surefire.reuseForks>

		<!-- args for surefire -->
		<surefire.args> --illegal-access=permit </surefire.args>

		<!--|##############################################################| -->
		<!--|################# Java Doc ###################################| -->
		<!--|##############################################################| -->
		<!-- check javadoc errors. The Checkstyle already do it -->
		<maven.javadoc.failOnError>false</maven.javadoc.failOnError>

		<!--|##############################################################| -->
		<!--|################# PMD & CPD ##################################| -->
		<!--|##############################################################| -->
		<!-- CPD minimum tokens to report on (5 to 10 duplicate lines) -->
		<minimumTokens>100</minimumTokens>
		<!-- The rule priority threshold; rules with lower priority than this will not be evaluated. -->
		<minimumPriority>5</minimumPriority>
		<!-- include test class -->
		<pmd.includeTests>true</pmd.includeTests>
		<!-- pmd version -->
		<pmd.version>6.37.0</pmd.version>
		<!-- failOnViolation is actually true by default, but can be disabled -->
		<pmd.failOnViolation>true</pmd.failOnViolation>

		<!--|##############################################################| -->
		<!--|################# Info Reports ###############################| -->
		<!--|##############################################################| -->
		<dependency.locations.enabled>false</dependency.locations.enabled>

		<!--|##############################################################| -->
		<!--|################# Tag List ###################################| -->
		<!--|##############################################################| -->
		<taglist.skip>false</taglist.skip>

		<!--|###########################################################################################################################| -->
		<!--|#################################### TIPS #################################################################################| -->
		<!--|###########################################################################################################################| -->
		<!-- If you want skip some plugin, just put it on configuration's plugin -->
		<!-- <skip>false</skip> -->

		<!-- If you force to child execute some plugin, just put it on configuration's plugin -->
		<!-- <forceMojoExecution>true</forceMojoExecution> -->

		<!-- Depedency erros can fixed with: -->
		<!-- mvn dependency:list -X -->
		<!-- mvn dependency:tree | grep -B 10 -A 1 tools.jar -->
		<!-- mvn install:install-file -DgroupId=com.sun -DartifactId=tools -Dpackaging=jar -Dversion=1.8 -Dfile="$JAVA_HOME/lib/tools.jar" -->


		<!--|###########################################################################################################################| -->
		<!--|#################################### Extensions ###########################################################################| -->
		<!--|###########################################################################################################################| -->

		<!-- allset.config.extensions.version - configs for plugins like pmd, spotbugs and checkstyle -->
		<default-extensions.version>0.0.1-SNAPSHOT</default-extensions.version>

		<!--|###########################################################################################################################| -->
		<!--|#################################### SOME LIBS ############################################################################| -->
		<!--|###########################################################################################################################| -->
		<slf4j.version>1.7.32</slf4j.version>
		<assertj.version>3.17.2</assertj.version>
	</properties>

	<!-- |######################## LIBS ################################################################################################| -->
	<dependencies>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

	</dependencies>

	<!-- |######################## BUILD ###############################################################################################| -->
	<build>

		<extensions>
			<!-- Plugin configs -->
			<extension>
				<groupId>org.default.extensions</groupId>
				<artifactId>default-extensions</artifactId>
				<version>${default-extensions.version}</version>
			</extension>
		</extensions>

		<pluginManagement>

			<plugins>

				<!-- Dependencies : download the dependencies -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
					<configuration>
						<excludeReactor>false</excludeReactor>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.sun</groupId>
							<artifactId>tools</artifactId>
							<version>1.8</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- Compiler : compile the files -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<compilerArgs>
							${project.argLine}
						</compilerArgs>
					</configuration>
				</plugin>

				<!-- PMD : Reports on issues found within application code -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven.pmd.plugin.version}</version>
					<configuration>
						<includeTests>${pmd.includeTests}</includeTests>
						<failOnViolation>${pmd.failOnViolation}</failOnViolation>
						<!-- printFailingErrors is pretty useful -->
						<printFailingErrors>true</printFailingErrors>
						<targetJdk>${maven.compiler.target}</targetJdk>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>net.sourceforge.pmd</groupId>
							<artifactId>pmd-core</artifactId>
							<version>${pmd.version}</version>
						</dependency>
						<dependency>
							<groupId>net.sourceforge.pmd</groupId>
							<artifactId>pmd-java</artifactId>
							<version>${pmd.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- Spotbugs : detects possible bugs in Java programs -->
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>${spotbugs.maven.plugin.version}</version>
				</plugin>

				<!-- Resources : handles the copying of project resources to the output directory -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.plugin.version}</version>
					<configuration>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
							<nonFilteredFileExtension>swf</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
				</plugin>

				<!-- Release : release a project with Maven, saving a lot of repetitive, manual work -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.plugin.version}</version>
				</plugin>

				<!-- Site : generate a site for the project. The generated site also includes the project's reports that were configured in the POM -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
				</plugin>

				<!-- Checkstyle : development tool to help programmers write Java code that adheres to a coding standard -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven.checkstyle.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- Surefire : The Surefire Plugin is used during the test phase of the build lifecycle to execute the tests of an application. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<configuration>
						<argLine>
							${project.argLine} ${surefire.args}
						</argLine>
						<parallel>${surefire.parallel}</parallel>
						<threadCount>${surefire.threadCount}</threadCount>
						<forkCount>${surefire.forkCount}</forkCount>
						<perCoreThreadCount>${surefire.perCoreThreadCount}</perCoreThreadCount>
						<reuseForks>${surefire.reuseForks}</reuseForks>
					</configuration>
				</plugin>

				<!-- Jacoco : JaCoCo is a free code coverage library for Java -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.maven.plugin.version}</version>
					<executions>
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<excludes>
							<exclude>**/*Exception.*</exclude>
							<exclude>**/*Messages.*</exclude>
							<exclude>**/*Const.*</exclude>
						</excludes>
						<rules>
							<rule>
								<element>CLASS</element>
								<limits>
									<limit>
										<counter>LINE</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.classLineRate}</minimum>
									</limit>
									<limit>
										<counter>BRANCH</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.classBranchRate}</minimum>
									</limit>
								</limits>
							</rule>

							<rule>
								<element>PACKAGE</element>
								<limits>
									<limit>
										<counter>LINE</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.packageLineRate}</minimum>
									</limit>
									<limit>
										<counter>BRANCH</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.packageBranchRate}</minimum>
									</limit>
								</limits>
							</rule>

							<rule>
								<element>BUNDLE</element>
								<limits>
									<limit>
										<counter>COMPLEXITY</counter>
										<value>COVEREDRATIO</value>
										<minimum>0.40</minimum>
									</limit>
									<limit>
										<counter>LINE</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.totalLineRate}</minimum>
									</limit>
									<limit>
										<counter>BRANCH</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.totalBranchRate}</minimum>
									</limit>
								</limits>
							</rule>

						</rules>
					</configuration>
				</plugin>

				<!-- Jar : provides the capability to build jars -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Source : creates a jar archive of the source files of the current project -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- JavaDoc : uses the Javadoc tool to generate javadocs for the project -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
					<configuration>
						<detectJavaApiLink>false</detectJavaApiLink>
						<detectLinks>false</detectLinks>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>

	</build>

	<!-- |######################## REPORTING ###########################################################################################| -->
	<reporting>
		<plugins>

			<!-- Surefire : generates the test results report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<argLine>
						${project.argLine} ${surefire.args}
					</argLine>
					<parallel>${surefire.parallel}</parallel>
					<threadCount>${surefire.threadCount}</threadCount>
					<forkCount>${surefire.forkCount}</forkCount>
					<perCoreThreadCount>${surefire.perCoreThreadCount}</perCoreThreadCount>
					<reuseForks>${surefire.reuseForks}</reuseForks>
					<groups>${surefire.groups}</groups>
				</configuration>
			</plugin>

			<!-- PMD : generates the pmd results report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
				<configuration>
					<includeTests>${pmd.includeTests}</includeTests>
				</configuration>
			</plugin>

			<!-- Spotbugs : generates the spotbugs results report -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.maven.plugin.version}</version>
			</plugin>

			<!-- Chekstyle : generates the checkstyle results report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
			</plugin>

			<!-- Jacoco : generates the jacoco results report -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<excludes>
						<exclude>**/*Exception.*</exclude>
						<exclude>**/*Messages.*</exclude>
						<exclude>**/*Const.*</exclude>
					</excludes>
				</configuration>			</plugin>

			<!-- Jxr : generated reports make it easier for the user to reference or find specific lines of code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.plugin.site.version}</version>
			</plugin>

			<!-- JavaDoc : generates the javadoc results report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<detectJavaApiLink>false</detectJavaApiLink>
					<detectLinks>false</detectLinks>
				</configuration>
			</plugin>

			<!-- Taglist : generates a report on various tags found in the code (Ex: TODO) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${taglist.maven.plugin.version}</version>
				<configuration>
					<skipTestSources>${taglist.skip}</skipTestSources>
					<tags>
						<tag>TODO</tag>
						<tag>FIXME</tag>
						<tag>@todo</tag>
					</tags>
				</configuration>
			</plugin>

			<!-- JDepend : produces a nicely formatted metrics report based on your project -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>${jdepend.maven.plugin.version}</version>
			</plugin>

			<!-- Dependency : show the dependencies' projects (libs and plugins) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>analyze-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>
</project>
