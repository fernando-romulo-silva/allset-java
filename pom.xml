<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.allset.java</groupId>
	<artifactId>allset-java</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>allset-java-ee-full</module>
		<module>allset-java-ee-webprofile</module>
		<module>allset-java-se</module>
		<module>allset-java-web</module>
		<!-- <module>allset-java-android</module> Problemas com plugin do android -->
	</modules>

	<description>
	     Set of maven configurations for types of projects that I already worked on. 
	     On the main pom.xml, there are a lot of plugin configurations used on my projects.
	</description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<url>https://github.com/fernando-romulo-silva/allset-java</url>

	<scm>
		<url>https://github.com/fernando-romulo-silva/allset-java</url>
		<connection>scm:git:https://github.com/fernando-romulo-silva/allset-java.git</connection>
		<developerConnection>scm:git:https://github.com/fernando-romulo-silva/allset-java.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<!--|###########################################################################################################################| -->
		<!--|#################################### PROJECT CONFIGURATION ################################################################| -->
		<!--|###########################################################################################################################| -->

		<!-- Project Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>

		<!-- Argumentos para JVM -->
		<!-- <argLine>-XX:-UseSplitVerifier</argLine> -->

		<!--|###########################################################################################################################| -->
		<!--|#################################### PLUGINS VERSION ######################################################################| -->
		<!--|###########################################################################################################################| -->
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.pmd.plugin.version>3.13.0</maven.pmd.plugin.version>
		<spotbugs.maven.plugin.version>4.0.0</spotbugs.maven.plugin.version>
		<maven.checkstyle.plugin.version>3.1.1</maven.checkstyle.plugin.version>
		<maven.javadoc.plugin.version>3.2.0</maven.javadoc.plugin.version>
		<maven.surefire.plugin.version>2.22.2</maven.surefire.plugin.version> <!-- 3.0.0-M5 -->
		<maven.site.plugin.version> 3.9.0</maven.site.plugin.version>
		<maven.jar.plugin.version>3.2.0</maven.jar.plugin.version>
		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>
		<jacoco.maven.plugin.version>0.8.5</jacoco.maven.plugin.version> <!-- -->
		<maven.source.plugin.version>3.2.1</maven.source.plugin.version>
		<maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>

		<jdepend.maven.plugin.version>2.0</jdepend.maven.plugin.version>
		<taglist.maven.plugin.version>2.4</taglist.maven.plugin.version>
		<maven.jxr.plugin.site.version>3.0.0</maven.jxr.plugin.site.version>
		<cobertura.maven.plugin.version>2.7</cobertura.maven.plugin.version>

		<!--|###########################################################################################################################| -->
		<!--|#################################### CONF. PLUGINS ########################################################################| -->
		<!--|###########################################################################################################################| -->
		<!--|####### OBS: Some properties plugin have the equal names, so you must be careful ##########################################| -->

		<!--|################# Locales ###################################| -->
		<!-- Languages for site, reports, etc. Ex: en, pt_BR, fr -->
		<locales>en</locales>

		<!-- Properties' plugins that can rewrite on child POMs. -->
		<!--|################# Compiler ##################################| -->
		<!-- Versao da JVM -->
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<!-- compile in the new java process -->
		<maven.compiler.fork>true</maven.compiler.fork>
		<!-- compile only changed classes, false; true compile all classes -->
		<maven.compiler.useIncrementalCompilation>false</maven.compiler.useIncrementalCompilation>

		<!--|################# Spotbugs ##################################| -->
		<!-- Enables analysis which takes more memory but finds more bugs. If you run out of memory, changes the value of the effort element to 'low'. -->
		<spotbugs.effort>Max</spotbugs.effort>
		<!-- Reports all bugs (other values are medium and max) -->
		<spotbugs.threshold>Low</spotbugs.threshold>
		<!-- Produces XML report -->
		<spotbugs.xmlOutput>true</spotbugs.xmlOutput>
		<!-- Se inclui classes de teste na validacao -->
		<spotbugs.includeTests>true</spotbugs.includeTests>
		<!-- Arquivo com as exlusoes de regras : coloque apenas nos poms filhos -->
		<!-- <spotbugs.excludeFilterFile>src/main/resources/spotbugs-exclude.xml</spotbugs.excludeFilterFile> -->

		<!--|################# CheckStyle #################################| -->
		<!-- Checkstyle config location -->
		<checkstyle.config.location>checkstyle.xml</checkstyle.config.location>
		<!-- Checkstyle's version -->
		<checkstyle.version>8.32</checkstyle.version>

		<!--|################# Cobertura ##################################| -->
		<!-- Porcentagem minima de cobertura das classes -->
		<cobertura.lineRate>0</cobertura.lineRate>
		<cobertura.branchRate>0</cobertura.branchRate>
		<!-- Porcentagem minima de cobertura dos pacotes -->
		<cobertura.packageLineRate>0</cobertura.packageLineRate>
		<cobertura.packageBranchRate>0</cobertura.packageBranchRate>
		<!-- Porcentagem minima de cobertura do projeto inteiro -->
		<cobertura.totalLineRate>0</cobertura.totalLineRate>
		<cobertura.totalBranchRate>0</cobertura.totalBranchRate>
		<!-- Porcentagem minima de cobertura das classes de regras de negocio -->
		<cobertura.lineRate>80</cobertura.lineRate>
		<cobertura.branchRate>80</cobertura.branchRate>
		<!-- Lugar onde estao as classes de regras de necocio (com subpacotes) -->
		<cobertura.pattern>org.*</cobertura.pattern>
		<!-- Falha a execucao qdo os testes nao cobre os valores minimos -->
		<cobertura.haltOnFailure>true</cobertura.haltOnFailure>
		<!-- Ignora metodos com uma instrucao apenas -->
		<cobertura.ignoreTrivial>true</cobertura.ignoreTrivial>

		<!--|################# Surefire ##################################| -->
		<!-- Eu recomendo vc agrupar seus testes (unitario, integracao, funcional, etc) pelo framework de testes, que neste caso, o TestNG -->
		<!-- Se vc nao espeficificar o grupo, o TestNG vai ignorar o testes -->
		<surefire.groups>unit, integration, functional, acceptance, perform, regression</surefire.groups>
		<!-- Os testes vao ser paralelos (rodar em thread) em relacao a metodos (methods), classes, (class) ou suite de testes (tests) -->
		<surefire.parallel>methods</surefire.parallel>
		<!-- Em quantas testes (threads) serao executadas sincronizadamente em um processo JVM -->
		<surefire.threadCount>4</surefire.threadCount>
		<!-- O maximo de thread por core da CPU -->
		<surefire.perCoreThreadCount>true</surefire.perCoreThreadCount>
		<!-- Define o maximo de processos JVM (se vc colocar a letra 'C' sera o maximo de processos por CORE) sincronizadamente -->
		<surefire.forkCount>1C</surefire.forkCount>
		<!-- Reutilizando processos da JVM -->
		<surefire.reuseForks>true</surefire.reuseForks>
		<!-- args for surefire -->
		<surefire.args> --illegal-access=permit </surefire.args>

		<!--|################# Java Doc ##################################| -->
		<!-- valida erros no javadoc, o checkstyle ja faz isso -->
		<maven.javadoc.failOnError>false</maven.javadoc.failOnError>

		<!--|################# PMD & CPD #################################| -->
		<!-- CPD minimum tokens to report on (5 to 10 duplicate lines) -->
		<minimumTokens>100</minimumTokens>
		<!-- The rule priority threshold; rules with lower priority than this will not be evaluated. -->
		<minimumPriority>5</minimumPriority>
		<!-- Valida classes de testes -->
		<pmd.includeTests>true</pmd.includeTests>

		<!--|################# Info Reports ###############################| -->
		<dependency.locations.enabled>false</dependency.locations.enabled>

		<!--|################# Tag List ###################################| -->
		<taglist.skip>false</taglist.skip>

		<!-- Observacao importante -->
		<!-- Por alguma razao o maven tava pulando alguns plugins na criacao do site, entao devemos forcar a barra! -->
		<!-- Caso algum pom descentende queira omitir a execucao do plugin -->
		<!-- <skip>false</skip> -->
		<!-- Caso vc quer q poms descendentes sejam obrigados a executar um plugin -->
		<!-- <forceMojoExecution>true</forceMojoExecution> -->
		<!-- Erros de dependencia de de projetos herdado podem ser resolvido com: 'mvn dependency:list' e depois 'mvn dependency:list -X' -->

		<!--|################# Extensions #################################| -->
		<!-- allset.config.extensions.version - Arquivo de configuracoes de plugins maven -->
		<allset.config.extensions.version>1.0.0</allset.config.extensions.version>

		<!--|###########################################################################################################################| -->
		<!--|#################################### SOME LIBS ############################################################################| -->
		<!--|###########################################################################################################################| -->
		<allset.config.test.version>1.0.1-SNAPSHOT</allset.config.test.version>

		<slf4j.version>1.7.30</slf4j.version>
		<assertj.version>3.17.2</assertj.version>
	</properties>

	<dependencies>
		<!-- ######################## TESTS ##################################################################################### -->
		<!-- Projeto com utils para tests em geral (cobertura e muito mais) -->
		<dependency>
			<groupId>org.allset.config</groupId>
			<artifactId>allset-config-test</artifactId>
			<version>${allset.config.test.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

	</dependencies>

	<!-- Plugins de Compilacao, Testes, etc -->
	<build>

		<!-- Configuracoes universais (xmls) dos plugins -->
		<extensions>
			<extension>
				<groupId>org.allset.config</groupId>
				<artifactId>allset-config-extensions</artifactId>
				<version>${allset.config.extensions.version}</version>
			</extension>
		</extensions>

		<plugins>
			<!-- Compiler : -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
			</plugin>

			<!-- PMD : Busca erros e duplicacao de codigos -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
				<configuration>
					<includeTests>${pmd.includeTests}</includeTests>
				</configuration>
			</plugin>

			<!-- Spotbugs : busca bugs em codigos java -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.maven.plugin.version}</version>
			</plugin>

			<!-- resources : -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<configuration>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
						<nonFilteredFileExtension>swf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>

			<!-- Release : Gerar versoes do projeto -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.plugin.version}</version>
			</plugin>

			<!-- Site : Para gerar um site com todas as informacoes do projeto -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.plugin.version}</version>
			</plugin>

			<!-- Chekstyle : Verifica a formatacao de codigos -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Configuração de testes automatizados -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<argLine>
						@{argLine} ${surefire.args}
					</argLine>
					<groups>${surefire.groups}</groups>
					<parallel>${surefire.parallel}</parallel>
					<threadCount>${surefire.threadCount}</threadCount>
					<forkCount>${surefire.forkCount}</forkCount>
					<perCoreThreadCount>${surefire.perCoreThreadCount}</perCoreThreadCount>
					<reuseForks>${surefire.reuseForks}</reuseForks>
				</configuration>
			</plugin>

			<!-- Cobertura : Verifica cobertura de testes automatizados -->
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>cobertura-maven-plugin</artifactId> <version>${cobertura.maven.plugin.version}</version> <configuration> <formats> <format>html</format> <format>xml</format> </formats> <instrumentation> <ignoreTrivial>${cobertura.ignoreTrivial}</ignoreTrivial> <excludes> <exclude>**/*Exception.*</exclude> <exclude>**/*Messages.*</exclude> </excludes> </instrumentation> <check> <haltOnFailure>${cobertura.haltOnFailure}</haltOnFailure> <branchRate>${cobertura.branchRate}</branchRate> 
				<lineRate>${cobertura.lineRate}</lineRate> <packageLineRate>${cobertura.packageLineRate}</packageLineRate> <packageBranchRate>${cobertura.packageBranchRate}</packageBranchRate> <totalLineRate>${cobertura.totalLineRate}</totalLineRate> <totalBranchRate>${cobertura.totalBranchRate}</totalBranchRate> <regexes> <regex> <pattern>${cobertura.pattern}</pattern> <branchRate>${cobertura.branchRate}</branchRate> <lineRate>${cobertura.lineRate}</lineRate> </regex> </regexes> </check> </configuration> </plugin> -->

			<!-- Jacoco : Verifica cobertura de testes automatizados -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludes>
						<exclude>**/*Exception.*</exclude>
						<exclude>**/*Messages.*</exclude>
					</excludes>
					<rules>
						<rule>
							<element>CLASS</element>
							<limits>
								<limit>
									<counter>LINE</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.80</minimum>
								</limit>
								<limit>
									<counter>BRANCH</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.80</minimum>
								</limit>
							</limits>
						</rule>
					</rules>
				</configuration>
			</plugin>

			<!-- Geracao de Pacotes Jar, test-jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Adiciona os codigos fontes na geracao dos pacotes -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- JavaDoc : Geracao de documentacao do codigo fonte -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<detectJavaApiLink>false</detectJavaApiLink>
					<detectLinks>false</detectLinks>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<!-- Plugins de Relatorios -->
	<reporting>
		<plugins>

			<!-- Surifire : Gera relatorios de testes automatizados -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<argLine>
						@{argLine} ${surefire.args}
					</argLine>
					<parallel>${surefire.parallel}</parallel>
					<threadCount>${surefire.threadCount}</threadCount>
					<forkCount>${surefire.forkCount}</forkCount>
					<perCoreThreadCount>${surefire.perCoreThreadCount}</perCoreThreadCount>
					<reuseForks>${surefire.reuseForks}</reuseForks>
					<groups>${surefire.groups}</groups>
				</configuration>
			</plugin>

			<!-- PMD : Busca erros e duplicacao de codigos -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin.version}</version>
				<configuration>
					<includeTests>${pmd.includeTests}</includeTests>
				</configuration>
			</plugin>

			<!-- Spotbugs : busca bugs em codigos java -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.maven.plugin.version}</version>
			</plugin>

			<!-- Chekstyle : Verifica a formatacao de codigos -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
			</plugin>

			<!-- Cobertura : Verifica cobertura de testes automatizados -->
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>cobertura-maven-plugin</artifactId> <version>${cobertura.maven.plugin.version}</version> <configuration> <formats> <format>html</format> <format>xml</format> </formats> <instrumentation> <ignoreTrivial>${cobertura.ignoreTrivial}</ignoreTrivial> <excludes> <exclude>**/*Exception.*</exclude> <exclude>**/*Messages.*</exclude> </excludes> </instrumentation> </configuration> </plugin> -->

			<!-- Jacoco : Verifica cobertura de testes automatizados -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/*Exception.*</exclude>
						<exclude>**/*Messages.*</exclude>
					</excludes>
				</configuration>			</plugin>

			<!-- Jxr : gerar relatorios/paginas com codigos fontes java -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.plugin.site.version}</version>
			</plugin>

			<!-- JavaDoc : Geracao de documentacao do codigo fonte -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<detectJavaApiLink>false</detectJavaApiLink>
					<detectLinks>false</detectLinks>
				</configuration>
			</plugin>

			<!-- Taglist : Gera relatorio de tags encontradas informativas em codigos java (Ex: TODO) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${taglist.maven.plugin.version}</version>
				<configuration>
					<skipTestSources>${taglist.skip}</skipTestSources>
					<tags>
						<tag>TODO</tag>
						<tag>FIXME</tag>
						<tag>@todo</tag>
					</tags>
				</configuration>
			</plugin>

			<!-- JDepend : Metricas de depencias dos projetos -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>${jdepend.maven.plugin.version}</version>
			</plugin>

		</plugins>
	</reporting>
</project>
